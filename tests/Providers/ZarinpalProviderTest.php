<?php

use Laratalks\PaymentGateways\Configs\Config;
use Laratalks\PaymentGateways\Configs\ProviderConfig;
use Laratalks\PaymentGateways\Configs\ProxyConfig;
use Laratalks\PaymentGateways\Providers\Soap\ZarinpalProvider;
use Laratalks\PaymentGateways\ValueObjects\PaymentRequestNeeds;
use Laratalks\PaymentGateways\ValueObjects\PaymentRequestResponse;

class ZarinpalProviderTest extends TestCase
{
    /**
     * @var ZarinpalProvider
     */
    protected $provider;

    public function setUp()
    {
        $config = (new Config())
            ->addProvider(new ProviderConfig('zarinpal', 'fknnfgloshgwl353dkvjdoif'))
            ->setDefaultProvider('zarinpal');

        $proxy = new ProxyConfig();
        $proxy->setType(ProxyConfig::TYPE_HTTP);
        $proxy->setHost('localhost');
        $proxy->setPort(8123);
        $proxy->setEnabled(true);


        $config->setProxy($proxy);

        $this->provider = new ZarinpalTestProvider($config->toArray());

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @expectedException  \Laratalks\PaymentGateways\Exceptions\PaymentGatewayBadRequestException
     */
    public function testCallAndGetReturnUrlExceptedException()
    {
        $needs = new PaymentRequestNeeds(1000, 'http://localhost/');
        $needs->set('description', 'something');

        $paymentResponse = $this->provider->callPaymentRequest($needs);

        $this->assertTrue($paymentResponse instanceof PaymentRequestResponse);
    }
}


class ZarinpalTestProvider extends ZarinpalProvider
{
    public function getWsdl()
    {
        return 'https://sandbox.zarinpal.com/pg/services/WebGate/wsdl';
    }
}